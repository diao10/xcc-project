<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 扫描所有包下的注解 -->
    <context:component-scan base-package="com.tyyy"></context:component-scan>
    <!-- 开启注解模式 -->
    <context:annotation-config />
    <!-- 开启aop -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--  开启事务 （默认所有方法都开启）-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
	<!--配置数据源 -->
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="${db.driver.class}" />
        <!-- 连接URL串 -->
        <property name="jdbcUrl" value="${db.url}" />
        <!-- 连接用户名 -->
        <property name="user" value="${db.username}" />
        <!-- 连接密码 -->
        <property name="password" value="${db.password}" />
        <!-- 初始化连接池时连接数量为5个 -->
        <property name="initialPoolSize" value="5" />
        <!-- 允许最小连接数量为5个 -->
        <property name="minPoolSize" value="5" />
        <!-- 允许最大连接数量为20个 -->
        <property name="maxPoolSize" value="20" />
        <!-- 允许连接池最大生成100个PreparedStatement对象 -->
        <property name="maxStatements" value="100" />
        <!-- 连接有效时间，连接超过3600秒未使用，则该连接丢弃 -->
        <property name="maxIdleTime" value="3600" />
        <!-- 连接用完时，一次产生的新连接步进值为2 -->
        <property name="acquireIncrement" value="2" />
        <!-- 获取连接失败后再尝试10次，再失败则返回DAOException异常 -->
        <property name="acquireRetryAttempts" value="10" />
        <!-- 获取下一次连接时最短间隔600毫秒，有助于提高性能 -->
        <property name="acquireRetryDelay" value="600" />
        <!-- 检查连接的有效性 -->
        <property name="testConnectionOnCheckin" value="true" />
        <!-- 每个1200秒检查连接对象状态 -->
        <property name="idleConnectionTestPeriod" value="1200" />
        <!-- 获取新连接的超时时间为10000毫秒 -->
        <property name="checkoutTimeout" value="10000" />
    </bean>
    <!-- 配置sqlSessionFactory -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/tyyy/mapping/*.xml"/>
        
        <property name="configLocation" value="/WEB-INF/mybatisConf.xml"/>  
    </bean>  
	<!-- 事务管理 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />  
    </bean>
    <!--MapperScanner，通过配置Scanner 和需要扫描的包，就可以将包中定义的mapper接口类注入到需要使用的地方，而不必手动实例化-->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.tyyy.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>
	<!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="app" class="com.tyyy.util.SpringUtil"></bean>
</beans>